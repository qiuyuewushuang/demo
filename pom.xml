<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.cssl</groupId>
  <artifactId>demo1</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>demo1 Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <parent>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-parent</artifactId>
  		<version>2.1.4.RELEASE</version>
  </parent>
  
  <dependencies>
  	<!-- tomcat、spring-web... -->
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-web</artifactId>
  		<version>2.1.4.RELEASE</version>
  		<!-- <exclusions>
  			<exclusion>
  				<groupId>org.springframework.boot</groupId>
  				<artifactId>spring-boot-starter-tomcat</artifactId>
  			</exclusion>
  		</exclusions> -->
  	</dependency>
  	
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-tomcat</artifactId>
  		<scope>provided</scope>
  	</dependency>
  	
  	<!-- 添加对jsp的支持 -->
  	<dependency>
  		<groupId>org.apache.tomcat.embed</groupId>
  		<artifactId>tomcat-embed-jasper</artifactId>
  		<scope>provided</scope>
  	</dependency>
  	
  	<!-- 添加对jstl的支持 -->
  	<dependency>
  		<groupId>javax.servlet</groupId>
  		<artifactId>jstl</artifactId>
  		<scope>provided</scope>
  	</dependency>
  	
  	<!-- 热部署 -->
  	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-devtools</artifactId>
  		<scope>provided</scope>
  	</dependency>
  	
  	<!-- lombok -->
  	<dependency>
    	<groupId>org.projectlombok</groupId>
    	<artifactId>lombok</artifactId>
    	<version>1.18.8</version>
	</dependency>
	
	<!-- 分页插件 -->
	<dependency>
    	<groupId>com.github.pagehelper</groupId>
    	<artifactId>pagehelper-spring-boot-starter</artifactId>
    	<version>[1.2.5,)</version>
	</dependency>
	
	<!-- <dependency>
    	<groupId>com.github.pagehelper</groupId>
    	<artifactId>pagehelper</artifactId>
    	<version>5.1.10</version>
	</dependency> -->
	
	<!-- 所有和mybatis相关的包 -->
	<dependency>
    	<groupId>org.mybatis.spring.boot</groupId>
    	<artifactId>mybatis-spring-boot-starter</artifactId>
    	<version>2.0.1</version>
	</dependency>
	
	<!-- mysql驱动包 -->
	<dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
	</dependency>
	
	<!-- 加密用的包 -->
	<dependency>
		<groupId>com.github.ulisesbocchio</groupId>
		<artifactId>jasypt-spring-boot-starter</artifactId>
		<version>2.0.0</version>
	</dependency>
	
	<!-- 测试 -->
	<dependency>
  		<groupId>org.springframework.boot</groupId>
  		<artifactId>spring-boot-starter-test</artifactId>
  		<scope>test</scope>
  	</dependency>
  	
  </dependencies>
  <build>
    <finalName>demo1</finalName>
    <plugins>
    	<plugin>
			<artifactId>maven-war-plugin</artifactId>			
		</plugin>
    </plugins>
    
    <!-- IDEA的maven项目中，默认源代码(src/main/java)目录下的xml等资源文件并不会在编译的时候一块打包进classes文件夹，而是直接舍弃掉
    	解决IDEA的这个问题有两种方式:
    	第一种是建立src/main/resources文件夹，将xml等资源文件放置到这个目录中。maven工具默认在编译的时候，会将resources文件夹中的资源文件一块打包进classes目录中 -->
    <resources>
		<resource>
			<directory>src/main/java</directory>
			<includes>
				<include>**/*.properties</include>
				<include>**/*.xml</include>
			</includes>
			<filtering>false</filtering>
		</resource>
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>**/*.*</include>				
			</includes>
			<filtering>false</filtering>
		</resource>
	</resources>
  </build>
</project>
